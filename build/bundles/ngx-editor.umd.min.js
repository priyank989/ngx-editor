!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("rxjs/Subject"),require("rxjs/add/operator/map")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common","@angular/forms","rxjs/Subject","rxjs/add/operator/map"],e):e(t["ngx-editor"]={},t.ng.core,t.ng.common,t.ng.forms,t.Rx)}(this,function(t,e,n,o,i){"use strict";function r(t,e){if(t){if(0===e.length)return!0;return!!e.filter(function(e){return-1!==e.indexOf(t)}).length}return!1}var a=function(){function t(){}return t.prototype.execute=function(t){if("enableObjectResizing"!==t)if("blockquote"!==t)if("removeBlockquote"!==t)if("link"!==t)if("image"!==t)if(t.includes("foreColor")){var e=t.split(":")[1];document.execCommand("foreColor",!1,e)}else document.execCommand(t,!1,null);else this.insertImage();else this.createLink();else document.execCommand("formatBlock",!1,"div");else document.execCommand("formatBlock",!1,"<blockquote>");else document.execCommand("enableObjectResizing",!0,!0)},t.prototype.insertImage=function(){var t=prompt("Enter Image URL","http://");if(t){if(!document.execCommand("insertImage",!1,t))throw new Error("Invalid URL")}},t.prototype.createLink=function(){var t=document.getSelection();if("A"===t.anchorNode.parentElement.tagName){(e=prompt("Enter URL",t.anchorNode.parentElement.getAttribute("href")))&&document.execCommand("createLink",!1,e)}else{if("None"===t.type)throw new Error("No selection made");var e;(e=prompt("Enter URL","http://"))&&document.execCommand("createLink",!1,e)}},t}();a.decorators=[{type:e.Injectable}],a.ctorParameters=function(){return[]};var s=function(){function t(){this.message=new i.Subject}return t.prototype.getMessage=function(){return this.message.asObservable()},t.prototype.sendMessage=function(t){this.message.next(t),this.clearMessageIn(5e3)},t.prototype.clearMessageIn=function(t){var e=this;setTimeout(function(){e.message.next(undefined)},t)},t}();s.decorators=[{type:e.Injectable}],s.ctorParameters=function(){return[]};var l={editable:!0,spellcheck:!0,height:"auto",minHeight:"0",width:"auto",minWidth:"0",translate:"yes",placeholder:"Enter text here...",toolbar:[["bold","italic","underline","strikeThrough","superscript","subscript","foreColor"],["justifyLeft","justifyCenter","justifyRight","justifyFull","indent","outdent"],["cut","copy","delete","removeFormat","undo","redo"],["paragraph","blockquote","removeBlockquote","horizontalLine","orderedList","unorderedList"],["link","unlink","image"]]},d=Object.freeze({canEnableToolbarOptions:r,getEditorConfiguration:function(t,e,n){for(var o in e)o&&(n[o]&&(t[o]=n[o]),t.hasOwnProperty(o)||(t[o]=e[o]));return t},canResize:function(t){return"basic"===t&&"vertical"}}),c=function(){function t(t,n,o,i){this._elementRef=t,this._messageService=n,this._commandExecutor=o,this._renderer=i,this.resizer="stack",this.config=l,this.showToolbar=!0,this.buttonClickedParent=new e.EventEmitter,this.enableToolbar=!1,this.Utils=d,this.lastViewModel=""}return t.prototype.onFocus=function(){this.enableToolbar=!0},t.prototype.onDocumentClick=function(t){this.enableToolbar=!!this._elementRef.nativeElement.contains(t.target)},t.prototype.onContentChange=function(t){"function"==typeof this.onChange&&this.onChange(t)},t.prototype.onBlur=function(){"function"==typeof this.onTouched&&this.onTouched()},t.prototype.resizeTextArea=function(t){var e=parseInt(this.height,10);e+=t,this.height=e+"px",this.textArea.nativeElement.style.height=this.height},t.prototype.executeCommand=function(t){try{this._commandExecutor.execute(t)}catch(e){this._messageService.sendMessage(e.message)}},t.prototype.writeValue=function(t){t!==undefined&&this.refreshView(t)},t.prototype.registerOnChange=function(t){this.onChange=t},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.prototype.refreshView=function(t){var e=null==t?"":t;this._renderer.setProperty(this.textArea.nativeElement,"innerHTML",e)},t.prototype.getCollectiveParams=function(){return{editable:this.editable,spellcheck:this.spellcheck,placeholder:this.placeholder,translate:this.translate,height:this.height,minHeight:this.minHeight,width:this.width,minWidth:this.minWidth,toolbar:this.toolbar}},t.prototype.ngOnInit=function(){this.config=this.Utils.getEditorConfiguration(this.config,l,this.getCollectiveParams()),this.height=this.height||this.textArea.nativeElement.offsetHeight,this.executeCommand("enableObjectResizing")},t.prototype.clickButtonParent=function(){this.buttonClickedParent.emit()},t}();c.decorators=[{type:e.Component,args:[{selector:"app-ngx-editor",template:'\n    <div class="ngx-editor" id="ngxEditor" [style.width]="config[\'width\']" [style.minWidth]="config[\'minWidth\']">\n\n      <app-ngx-editor-toolbar [config]="config" [enableToolbar]="enableToolbar" [showToolbar]="showToolbar"\n                              (buttonClicked)="clickButtonParent()"\n                              (execute)="executeCommand($event)"></app-ngx-editor-toolbar>\n\n      \x3c!-- text area --\x3e\n      <div class="ngx-editor-textarea" [attr.contenteditable]="config[\'editable\']"\n           [attr.placeholder]="config[\'placeholder\']" (input)="onContentChange($event.target.innerHTML)"\n           [attr.translate]="config[\'translate\']" [attr.spellcheck]="config[\'spellcheck\']" [style.height]="config[\'height\']"\n           [style.minHeight]="config[\'minHeight\']"\n           [style.resize]="Utils?.canResize(resizer)" (focus)="onFocus()" (blur)="onBlur()" #ngxTextArea></div>\n\n      <app-ngx-editor-message></app-ngx-editor-message>\n\n      <app-ngx-grippie *ngIf="resizer === \'stack\'"></app-ngx-grippie>\n\n    </div>\n  ',styles:["\n    /*\n     * editor styles\n     */\n    .ngx-editor {\n      position: relative; }\n      .ngx-editor ::ng-deep [contenteditable=true]:empty:before {\n        content: attr(placeholder);\n        display: block;\n        color: #868e96;\n        opacity: 1; }\n      .ngx-editor .ngx-editor-textarea {\n        min-height: 5rem;\n        padding: 0.5rem 0.8rem 1rem 0.8rem;\n        border: 1px solid #ddd;\n        background-color: #fff;\n        overflow-x: hidden;\n        overflow-y: auto; }\n        .ngx-editor .ngx-editor-textarea:focus, .ngx-editor .ngx-editor-textarea.focus {\n          outline: 0; }\n        .ngx-editor .ngx-editor-textarea ::ng-deep blockquote {\n          margin-left: 1rem;\n          border-left: 0.2em solid #dfe2e5;\n          padding-left: 0.5rem; }\n  "],providers:[{provide:o.NG_VALUE_ACCESSOR,useExisting:e.forwardRef(function(){return c}),multi:!0}]}]}],c.ctorParameters=function(){return[{type:e.ElementRef},{type:s},{type:a},{type:e.Renderer2}]},c.propDecorators={editable:[{type:e.Input}],spellcheck:[{type:e.Input}],placeholder:[{type:e.Input}],translate:[{type:e.Input}],height:[{type:e.Input}],minHeight:[{type:e.Input}],width:[{type:e.Input}],minWidth:[{type:e.Input}],toolbar:[{type:e.Input}],resizer:[{type:e.Input}],config:[{type:e.Input}],showToolbar:[{type:e.Input}],buttonClickedParent:[{type:e.Output}],textArea:[{type:e.ViewChild,args:["ngxTextArea"]}],onDocumentClick:[{type:e.HostListener,args:["document:click",["$event"]]}]};var u=function(){function t(t){this._editorComponent=t,this.oldY=0,this.grabber=!1}return t.prototype.onMouseMove=function(t){this.grabber&&(this._editorComponent.resizeTextArea(t.clientY-this.oldY),this.oldY=t.clientY)},t.prototype.onMouseUp=function(t){this.grabber=!1},t.prototype.onResize=function(t,e){this.grabber=!0,this.oldY=t.clientY,t.preventDefault()},t}();u.decorators=[{type:e.Component,args:[{selector:"app-ngx-grippie",template:'\n    <div class="ngx-editor-grippie">\n      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="isolation:isolate" viewBox="651.6 235 26 5"\n        width="26" height="5">\n        <g id="sprites">\n          <path d=" M 651.6 235 L 653.6 235 L 653.6 237 L 651.6 237 M 654.6 238 L 656.6 238 L 656.6 240 L 654.6 240 M 660.6 238 L 662.6 238 L 662.6 240 L 660.6 240 M 666.6 238 L 668.6 238 L 668.6 240 L 666.6 240 M 672.6 238 L 674.6 238 L 674.6 240 L 672.6 240 M 657.6 235 L 659.6 235 L 659.6 237 L 657.6 237 M 663.6 235 L 665.6 235 L 665.6 237 L 663.6 237 M 669.6 235 L 671.6 235 L 671.6 237 L 669.6 237 M 675.6 235 L 677.6 235 L 677.6 237 L 675.6 237"\n            fill="rgb(147,153,159)" />\n        </g>\n      </svg>\n    </div>\n  ',styles:["\n    .ngx-editor-grippie {\n      height: 9px;\n      background-color: #f1f1f1;\n      position: relative;\n      text-align: center;\n      cursor: s-resize;\n      border: 1px solid #ddd;\n      border-top: transparent; }\n      .ngx-editor-grippie svg {\n        position: absolute;\n        top: 1.5px;\n        width: 50%;\n        right: 25%; }\n  "]}]}],u.ctorParameters=function(){return[{type:c}]},u.propDecorators={onMouseMove:[{type:e.HostListener,args:["document:mousemove",["$event"]]}],onMouseUp:[{type:e.HostListener,args:["document:mouseup",["$event"]]}],onResize:[{type:e.HostListener,args:["mousedown",["$event"]]}]};var b=function(){function t(t){var e=this;this._messageService=t,this.ngxMessage="",this._messageService.getMessage().subscribe(function(t){return e.ngxMessage=t})}return t.prototype.clearMessage=function(){this.ngxMessage=undefined},t}();b.decorators=[{type:e.Component,args:[{selector:"app-ngx-editor-message",template:'\n    <div class="ngx-editor-message" *ngIf="ngxMessage" (dblclick)="clearMessage()">\n      {{ ngxMessage }}\n    </div>\n  ',styles:["\n    .ngx-editor-message {\n      font-size: 80%;\n      background-color: #f1f1f1;\n      border: 1px solid #ddd;\n      border-top: transparent;\n      padding: 0 0.5rem;\n      padding-bottom: 0.1rem;\n      -webkit-transition: 0.5s ease-in;\n      transition: 0.5s ease-in; }\n  "]}]}],b.ctorParameters=function(){return[{type:s}]};var g=function(){function t(){this.enableToolbar=!1,this.showToolbar=!0,this.execute=new e.EventEmitter,this.buttonClicked=new e.EventEmitter}return t.prototype.canEnableToolbarOptions=function(t){return r(t,this.config.toolbar)},t.prototype.triggerCommand=function(t){"foreColor"!==t?this.execute.emit(t):this.colorElement.nativeElement.click()},t.prototype.triggerCommandColor=function(t){this.execute.emit("foreColor:"+t.target.value)},t.prototype.clickButton=function(){this.buttonClicked.emit()},t}();g.decorators=[{type:e.Component,args:[{selector:"app-ngx-editor-toolbar",template:'\n    <div class="ngx-toolbar" *ngIf="showToolbar">\n      <input type="color" style="width: 0; height: 0; position: absolute; opacity: 0;" (input)="triggerCommandColor($event)" #colorElement>\n      <div class="ngx-toolbar-set">\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'foreColor\')" (click)="triggerCommand(\'foreColor\')"\n                title="Bold" [disabled]="!enableToolbar">\n          <i class="fa fa-tint" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'bold\')" (click)="triggerCommand(\'bold\')"\n          title="Bold" [disabled]="!enableToolbar">\n          <i class="fa fa-bold" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'italic\')" (click)="triggerCommand(\'italic\')"\n          title="Italic" [disabled]="!enableToolbar">\n          <i class="fa fa-italic" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'underline\')" (click)="triggerCommand(\'underline\')"\n          title="Underline" [disabled]="!enableToolbar">\n          <i class="fa fa-underline" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'strikeThrough\')" (click)="triggerCommand(\'strikeThrough\')"\n          title="Strikethrough" [disabled]="!enableToolbar">\n          <i class="fa fa-strikethrough" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'superscript\')" (click)="triggerCommand(\'superscript\')"\n          title="Superscript" [disabled]="!enableToolbar">\n          <i class="fa fa-superscript" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'subscript\')" (click)="triggerCommand(\'subscript\')"\n          title="Subscript" [disabled]="!enableToolbar">\n          <i class="fa fa-subscript" aria-hidden="true"></i>\n        </button>\n      </div>\n      <div class="ngx-toolbar-set">\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'justifyLeft\')" (click)="triggerCommand(\'justifyLeft\')"\n          title="Justify Left" [disabled]="!enableToolbar">\n          <i class="fa fa-align-left" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'justifyCenter\')" (click)="triggerCommand(\'justifyCenter\')"\n          title="Justify Center" [disabled]="!enableToolbar">\n          <i class="fa fa-align-center" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'justifyRight\')" (click)="triggerCommand(\'justifyRight\')"\n          title="Justify Right" [disabled]="!enableToolbar">\n          <i class="fa fa-align-right" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'justifyFull\')" (click)="triggerCommand(\'justifyFull\')"\n          title="Justify" [disabled]="!enableToolbar">\n          <i class="fa fa-align-justify" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'indent\')" (click)="triggerCommand(\'indent\')"\n          title="Indent" [disabled]="!enableToolbar">\n          <i class="fa fa-indent" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'outdent\')" (click)="triggerCommand(\'outdent\')"\n          title="Outdent" [disabled]="!enableToolbar">\n          <i class="fa fa-outdent" aria-hidden="true"></i>\n        </button>\n      </div>\n      <div class="ngx-toolbar-set">\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'cut\')" (click)="triggerCommand(\'cut\')" title="Cut"\n          [disabled]="!enableToolbar">\n          <i class="fa fa-scissors" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'copy\')" (click)="triggerCommand(\'copy\')"\n          title="Copy" [disabled]="!enableToolbar">\n          <i class="fa fa-files-o" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'delete\')" (click)="triggerCommand(\'delete\')"\n          title="Delete" [disabled]="!enableToolbar">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'removeFormat\')" (click)="triggerCommand(\'removeFormat\')"\n          title="Clear Formatting" [disabled]="!enableToolbar">\n          <i class="fa fa-eraser" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'undo\')" (click)="triggerCommand(\'undo\')"\n          title="Undo" [disabled]="!enableToolbar">\n          <i class="fa fa-undo" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'redo\')" (click)="triggerCommand(\'redo\')"\n          title="Redo" [disabled]="!enableToolbar">\n          <i class="fa fa-repeat" aria-hidden="true"></i>\n        </button>\n      </div>\n      <div class="ngx-toolbar-set">\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'paragraph\')" (click)="triggerCommand(\'insertParagraph\')"\n          title="Paragraph" [disabled]="!enableToolbar">\n          <i class="fa fa-paragraph" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'blockquote\')" (click)="triggerCommand(\'blockquote\')"\n          title="Blockquote" [disabled]="!enableToolbar">\n          <i class="fa fa-quote-left" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'removeBlockquote\')" (click)="triggerCommand(\'removeBlockquote\')"\n          title="Remove Blockquote" [disabled]="!enableToolbar">\n          <i class="fa fa-quote-right" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'horizontalLine\')" (click)="triggerCommand(\'insertHorizontalRule\')"\n          title="Horizontal Line" [disabled]="!enableToolbar">\n          <i class="fa fa-minus" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'orderedList\')" (click)="triggerCommand(\'insertUnorderedList\')"\n          title="Unodered List" [disabled]="!enableToolbar">\n          <i class="fa fa-list-ul" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'unorderedList\')" (click)="triggerCommand(\'insertOrderedList\')"\n          title="Ordered List" [disabled]="!enableToolbar">\n          <i class="fa fa-list-ol" aria-hidden="true"></i>\n        </button>\n      </div>\n      <div class="ngx-toolbar-set">\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'link\')" (click)="triggerCommand(\'link\')"\n          title="Insert/Edit Link" [disabled]="!enableToolbar">\n          <i class="fa fa-link" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'unlink\')" (click)="triggerCommand(\'unlink\')"\n          title="Unlink" [disabled]="!enableToolbar">\n          <i class="fa fa-chain-broken" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="ngx-editor-button" *ngIf="canEnableToolbarOptions(\'image\')" (click)="clickButton()"\n          title="Insert Image" [disabled]="!enableToolbar">\n          <i class="fa fa-picture-o" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  ',styles:["\n    .ngx-toolbar {\n      background-color: #f5f5f5;\n      font-size: 0.8rem;\n      padding: 0.2rem;\n      border: 1px solid #ddd;\n      border-bottom: transparent; }\n      .ngx-toolbar .ngx-toolbar-set {\n        display: inline-block;\n        border: 1px solid #ddd;\n        border-radius: 5px;\n        background-color: white; }\n        .ngx-toolbar .ngx-toolbar-set .ngx-editor-button {\n          background-color: #f5f5f5;\n          background-color: transparent;\n          border: 0;\n          padding: 0.4rem;\n          min-width: 2.5rem;\n          float: left;\n          border-right: 1px solid #ddd; }\n          .ngx-toolbar .ngx-toolbar-set .ngx-editor-button:hover {\n            cursor: pointer;\n            background-color: #f1f1f1;\n            -webkit-transition: 0.2s ease;\n            transition: 0.2s ease; }\n          .ngx-toolbar .ngx-toolbar-set .ngx-editor-button:focus, .ngx-toolbar .ngx-toolbar-set .ngx-editor-button.focus {\n            outline: 0; }\n          .ngx-toolbar .ngx-toolbar-set .ngx-editor-button:last-child {\n            border-right: transparent; }\n          .ngx-toolbar .ngx-toolbar-set .ngx-editor-button:first-child {\n            border-top-left-radius: 5px;\n            border-bottom-left-radius: 5px; }\n          .ngx-toolbar .ngx-toolbar-set .ngx-editor-button:last-child {\n            border-top-right-radius: 5px;\n            border-bottom-right-radius: 5px; }\n          .ngx-toolbar .ngx-toolbar-set .ngx-editor-button:disabled {\n            background-color: #f5f5f5;\n            pointer-events: none;\n            cursor: not-allowed; }\n  "]}]}],g.ctorParameters=function(){return[]},g.propDecorators={config:[{type:e.Input}],enableToolbar:[{type:e.Input}],showToolbar:[{type:e.Input}],execute:[{type:e.Output}],buttonClicked:[{type:e.Output}],colorElement:[{type:e.ViewChild,args:["colorElement"]}]};var p=function(){return function(){}}();p.decorators=[{type:e.NgModule,args:[{imports:[n.CommonModule],declarations:[c,u,b,g],exports:[c],providers:[a,s]}]}],p.ctorParameters=function(){return[]},t.NgxEditorModule=p,t.ɵc=a,t.ɵb=s,t.ɵe=b,t.ɵf=g,t.ɵa=c,t.ɵd=u,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-editor.umd.min.js.map
